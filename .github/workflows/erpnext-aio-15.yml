name: Build ERPNext AIO Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]           # 打 v* tag 时也会触发（并自动用该版本）
  workflow_dispatch:
    inputs:
      version:
        description: '版本号（如 15.77.0）。若留空且用 tag 触发，会用 tag；否则只发 latest'
        required: false
      push_git_tag:
        description: '构建成功后，把该版本回推为 Git tag（v{version}）'
        type: boolean
        default: true
      force_rebuild:
        description: '强制全量重建（禁用缓存）'
        type: boolean
        default: false

permissions:
  contents: write     # 回推 Git tag 需要
  packages: write     # 推 GHCR 需要

concurrency:
  group: erpnext-aio-15-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive version & tags
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          IMAGE="ghcr.io/${{ github.repository_owner }}/erpnext15-aio"

          # 版本优先级：手动输入 > tag 触发 > 空
          IN="${{ inputs.version || '' }}"
          if [[ -n "$IN" ]]; then
            VER="$IN"
          elif [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VER="${GITHUB_REF_NAME#v}"   # 去掉前缀 v
          else
            VER=""
          fi

          # 组装 tags
          TAGS="${IMAGE}:latest"
          if [[ -n "$VER" ]]; then
            TAGS="${TAGS},${IMAGE}:${VER},${IMAGE}:v${VER}"
          fi

          echo "image=${IMAGE}"   >> "$GITHUB_OUTPUT"
          echo "version=${VER}"   >> "$GITHUB_OUTPUT"
          echo "tags=${TAGS}"     >> "$GITHUB_OUTPUT"

      - name: Build & Push (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: ./erpnext15
          file: ./erpnext15/Dockerfile
          platforms: linux/amd64
          pull: true
          push: true
          # 强制更新逻辑
          no-cache: ${{ inputs.force_rebuild == true }}
          # 你这两文件方案会在 Dockerfile 里调用 installdata/install-erpnext15.sh 完成所有安装
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Create & push git tag (optional)
        if: ${{ inputs.push_git_tag == true && steps.meta.outputs.version != '' && github.ref_type != 'tag' }}
        shell: bash
        run: |
          set -e
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a "v${{ steps.meta.outputs.version }}" -m "Release v${{ steps.meta.outputs.version }}"
          git push origin "v${{ steps.meta.outputs.version }}"
